
Pjt01_led.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  000002ee  00000382  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002ee  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800200  00800200  00000382  2**0
                  ALLOC
  3 .stab         000006e4  00000000  00000000  00000384  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000085  00000000  00000000  00000a68  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000000a0  00000000  00000000  00000af0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000805  00000000  00000000  00000b90  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000001bd  00000000  00000000  00001395  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000041a  00000000  00000000  00001552  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000098  00000000  00000000  0000196c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000120  00000000  00000000  00001a04  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000005b  00000000  00000000  00001b24  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000010  00000000  00000000  00001b7f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
   8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
   c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  10:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  14:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  18:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  1c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  20:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  24:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  28:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  2c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  30:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  34:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  38:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  3c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  40:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  44:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  48:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  4c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  50:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  54:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  58:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  5c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  60:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  64:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  68:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  6c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  70:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  74:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  78:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  7c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  80:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  84:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  88:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  8c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  90:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  94:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  98:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  9c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  a0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  a4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  a8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  ac:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  b0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  b4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  b8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  bc:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  c0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  c4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  c8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  cc:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  d0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  d4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  d8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  dc:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  e0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ee ee       	ldi	r30, 0xEE	; 238
  fc:	f2 e0       	ldi	r31, 0x02	; 2
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a0 30       	cpi	r26, 0x00	; 0
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>
 10e:	1b be       	out	0x3b, r1	; 59

00000110 <__do_clear_bss>:
 110:	12 e0       	ldi	r17, 0x02	; 2
 112:	a0 e0       	ldi	r26, 0x00	; 0
 114:	b2 e0       	ldi	r27, 0x02	; 2
 116:	01 c0       	rjmp	.+2      	; 0x11a <.do_clear_bss_start>

00000118 <.do_clear_bss_loop>:
 118:	1d 92       	st	X+, r1

0000011a <.do_clear_bss_start>:
 11a:	a1 30       	cpi	r26, 0x01	; 1
 11c:	b1 07       	cpc	r27, r17
 11e:	e1 f7       	brne	.-8      	; 0x118 <.do_clear_bss_loop>
 120:	0e 94 ce 00 	call	0x19c	; 0x19c <main>
 124:	0c 94 75 01 	jmp	0x2ea	; 0x2ea <_exit>

00000128 <__bad_interrupt>:
 128:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012c <led_init>:
#include "led.h" // declare of struct things..

uint8_t Leds;

void led_init(){
	Leds = DDRL = PORTL = 0xff;
 12c:	8f ef       	ldi	r24, 0xFF	; 255
 12e:	80 93 0b 01 	sts	0x010B, r24
 132:	80 93 0a 01 	sts	0x010A, r24
 136:	80 93 00 02 	sts	0x0200, r24
}
 13a:	08 95       	ret

0000013c <led_on_all>:
void led_on_all(){
	Leds = PORTL = 0x00;
 13c:	10 92 0b 01 	sts	0x010B, r1
 140:	10 92 00 02 	sts	0x0200, r1
}
 144:	08 95       	ret

00000146 <led_off_all>:
void led_off_all(){
	Leds = PORTL = 0xff;
 146:	8f ef       	ldi	r24, 0xFF	; 255
 148:	80 93 0b 01 	sts	0x010B, r24
 14c:	80 93 00 02 	sts	0x0200, r24
}
 150:	08 95       	ret

00000152 <led_on>:
void led_on(uint8_t led_no){
	Leds &= ~(1 << led_no);
 152:	21 e0       	ldi	r18, 0x01	; 1
 154:	30 e0       	ldi	r19, 0x00	; 0
 156:	02 c0       	rjmp	.+4      	; 0x15c <led_on+0xa>
 158:	22 0f       	add	r18, r18
 15a:	33 1f       	adc	r19, r19
 15c:	8a 95       	dec	r24
 15e:	e2 f7       	brpl	.-8      	; 0x158 <led_on+0x6>
 160:	20 95       	com	r18
 162:	80 91 00 02 	lds	r24, 0x0200
 166:	28 23       	and	r18, r24
 168:	20 93 00 02 	sts	0x0200, r18
	PORTL = Leds;
 16c:	20 93 0b 01 	sts	0x010B, r18
}
 170:	08 95       	ret

00000172 <led_off>:
void led_off(uint8_t led_no){
	Leds |= (1 << led_no);
 172:	21 e0       	ldi	r18, 0x01	; 1
 174:	30 e0       	ldi	r19, 0x00	; 0
 176:	02 c0       	rjmp	.+4      	; 0x17c <led_off+0xa>
 178:	22 0f       	add	r18, r18
 17a:	33 1f       	adc	r19, r19
 17c:	8a 95       	dec	r24
 17e:	e2 f7       	brpl	.-8      	; 0x178 <led_off+0x6>
 180:	80 91 00 02 	lds	r24, 0x0200
 184:	82 2b       	or	r24, r18
 186:	80 93 00 02 	sts	0x0200, r24
	PORTL = Leds;
 18a:	80 93 0b 01 	sts	0x010B, r24
}
 18e:	08 95       	ret

00000190 <led_mask>:
void led_mask(uint8_t led_mask){
	Leds = ~led_mask;
 190:	80 95       	com	r24
 192:	80 93 00 02 	sts	0x0200, r24
	PORTL = Leds;
 196:	80 93 0b 01 	sts	0x010B, r24
}
 19a:	08 95       	ret

0000019c <main>:
int main(void)
{
	int i; // uint8_t will not work.
	// because it don't have minus..
	// but also not work with int.. because of casting. maybe?
	led_init();
 19c:	0e 94 96 00 	call	0x12c	; 0x12c <led_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1a0:	8f ef       	ldi	r24, 0xFF	; 255
 1a2:	9f eb       	ldi	r25, 0xBF	; 191
 1a4:	a1 e2       	ldi	r26, 0x21	; 33
 1a6:	81 50       	subi	r24, 0x01	; 1
 1a8:	90 40       	sbci	r25, 0x00	; 0
 1aa:	a0 40       	sbci	r26, 0x00	; 0
 1ac:	e1 f7       	brne	.-8      	; 0x1a6 <main+0xa>
 1ae:	00 c0       	rjmp	.+0      	; 0x1b0 <main+0x14>
 1b0:	00 00       	nop
	_delay_ms(1500);
	led_on_all();
 1b2:	0e 94 9e 00 	call	0x13c	; 0x13c <led_on_all>
 1b6:	8f ef       	ldi	r24, 0xFF	; 255
 1b8:	9f eb       	ldi	r25, 0xBF	; 191
 1ba:	a1 e2       	ldi	r26, 0x21	; 33
 1bc:	81 50       	subi	r24, 0x01	; 1
 1be:	90 40       	sbci	r25, 0x00	; 0
 1c0:	a0 40       	sbci	r26, 0x00	; 0
 1c2:	e1 f7       	brne	.-8      	; 0x1bc <main+0x20>
 1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <main+0x2a>
 1c6:	00 00       	nop
	_delay_ms(1500);
	led_off_all();
 1c8:	0e 94 a3 00 	call	0x146	; 0x146 <led_off_all>
 1cc:	8f ef       	ldi	r24, 0xFF	; 255
 1ce:	9f eb       	ldi	r25, 0xBF	; 191
 1d0:	a1 e2       	ldi	r26, 0x21	; 33
 1d2:	81 50       	subi	r24, 0x01	; 1
 1d4:	90 40       	sbci	r25, 0x00	; 0
 1d6:	a0 40       	sbci	r26, 0x00	; 0
 1d8:	e1 f7       	brne	.-8      	; 0x1d2 <main+0x36>
 1da:	00 c0       	rjmp	.+0      	; 0x1dc <main+0x40>
 1dc:	00 00       	nop
 1de:	c0 e0       	ldi	r28, 0x00	; 0
	_delay_ms(1500);
	for ( i=0 ; i<7; i++) {
		led_on(i);
 1e0:	8c 2f       	mov	r24, r28
 1e2:	0e 94 a9 00 	call	0x152	; 0x152 <led_on>
 1e6:	8f ef       	ldi	r24, 0xFF	; 255
 1e8:	9f e3       	ldi	r25, 0x3F	; 63
 1ea:	ab e0       	ldi	r26, 0x0B	; 11
 1ec:	81 50       	subi	r24, 0x01	; 1
 1ee:	90 40       	sbci	r25, 0x00	; 0
 1f0:	a0 40       	sbci	r26, 0x00	; 0
 1f2:	e1 f7       	brne	.-8      	; 0x1ec <main+0x50>
 1f4:	00 c0       	rjmp	.+0      	; 0x1f6 <main+0x5a>
 1f6:	00 00       	nop
 1f8:	cf 5f       	subi	r28, 0xFF	; 255
	_delay_ms(1500);
	led_on_all();
	_delay_ms(1500);
	led_off_all();
	_delay_ms(1500);
	for ( i=0 ; i<7; i++) {
 1fa:	c7 30       	cpi	r28, 0x07	; 7
 1fc:	89 f7       	brne	.-30     	; 0x1e0 <main+0x44>
		led_on(i);
		_delay_ms(500);
	}
	led_off(0), _delay_ms(500);
 1fe:	80 e0       	ldi	r24, 0x00	; 0
 200:	0e 94 b9 00 	call	0x172	; 0x172 <led_off>
 204:	8f ef       	ldi	r24, 0xFF	; 255
 206:	9f e3       	ldi	r25, 0x3F	; 63
 208:	ab e0       	ldi	r26, 0x0B	; 11
 20a:	81 50       	subi	r24, 0x01	; 1
 20c:	90 40       	sbci	r25, 0x00	; 0
 20e:	a0 40       	sbci	r26, 0x00	; 0
 210:	e1 f7       	brne	.-8      	; 0x20a <main+0x6e>
 212:	00 c0       	rjmp	.+0      	; 0x214 <main+0x78>
 214:	00 00       	nop
	led_off(2), _delay_ms(500);
 216:	82 e0       	ldi	r24, 0x02	; 2
 218:	0e 94 b9 00 	call	0x172	; 0x172 <led_off>
 21c:	8f ef       	ldi	r24, 0xFF	; 255
 21e:	9f e3       	ldi	r25, 0x3F	; 63
 220:	ab e0       	ldi	r26, 0x0B	; 11
 222:	81 50       	subi	r24, 0x01	; 1
 224:	90 40       	sbci	r25, 0x00	; 0
 226:	a0 40       	sbci	r26, 0x00	; 0
 228:	e1 f7       	brne	.-8      	; 0x222 <main+0x86>
 22a:	00 c0       	rjmp	.+0      	; 0x22c <main+0x90>
 22c:	00 00       	nop
	led_off(4), _delay_ms(500);
 22e:	84 e0       	ldi	r24, 0x04	; 4
 230:	0e 94 b9 00 	call	0x172	; 0x172 <led_off>
 234:	8f ef       	ldi	r24, 0xFF	; 255
 236:	9f e3       	ldi	r25, 0x3F	; 63
 238:	ab e0       	ldi	r26, 0x0B	; 11
 23a:	81 50       	subi	r24, 0x01	; 1
 23c:	90 40       	sbci	r25, 0x00	; 0
 23e:	a0 40       	sbci	r26, 0x00	; 0
 240:	e1 f7       	brne	.-8      	; 0x23a <main+0x9e>
 242:	00 c0       	rjmp	.+0      	; 0x244 <main+0xa8>
 244:	00 00       	nop
	led_off(6), _delay_ms(500);
 246:	86 e0       	ldi	r24, 0x06	; 6
 248:	0e 94 b9 00 	call	0x172	; 0x172 <led_off>
 24c:	8f ef       	ldi	r24, 0xFF	; 255
 24e:	9f e3       	ldi	r25, 0x3F	; 63
 250:	ab e0       	ldi	r26, 0x0B	; 11
 252:	81 50       	subi	r24, 0x01	; 1
 254:	90 40       	sbci	r25, 0x00	; 0
 256:	a0 40       	sbci	r26, 0x00	; 0
 258:	e1 f7       	brne	.-8      	; 0x252 <main+0xb6>
 25a:	00 c0       	rjmp	.+0      	; 0x25c <main+0xc0>
 25c:	00 00       	nop
 25e:	8f ef       	ldi	r24, 0xFF	; 255
 260:	9f e7       	ldi	r25, 0x7F	; 127
 262:	a6 e1       	ldi	r26, 0x16	; 22
 264:	81 50       	subi	r24, 0x01	; 1
 266:	90 40       	sbci	r25, 0x00	; 0
 268:	a0 40       	sbci	r26, 0x00	; 0
 26a:	e1 f7       	brne	.-8      	; 0x264 <main+0xc8>
 26c:	00 c0       	rjmp	.+0      	; 0x26e <main+0xd2>
 26e:	00 00       	nop

	_delay_ms(1000);
	led_mask(0), led_mask(1);
 270:	80 e0       	ldi	r24, 0x00	; 0
 272:	0e 94 c8 00 	call	0x190	; 0x190 <led_mask>
 276:	81 e0       	ldi	r24, 0x01	; 1
 278:	0e 94 c8 00 	call	0x190	; 0x190 <led_mask>
 27c:	8f ef       	ldi	r24, 0xFF	; 255
 27e:	9f e3       	ldi	r25, 0x3F	; 63
 280:	ab e0       	ldi	r26, 0x0B	; 11
 282:	81 50       	subi	r24, 0x01	; 1
 284:	90 40       	sbci	r25, 0x00	; 0
 286:	a0 40       	sbci	r26, 0x00	; 0
 288:	e1 f7       	brne	.-8      	; 0x282 <main+0xe6>
 28a:	00 c0       	rjmp	.+0      	; 0x28c <main+0xf0>
 28c:	00 00       	nop
	_delay_ms(500);
	led_mask(2), led_mask(3);
 28e:	82 e0       	ldi	r24, 0x02	; 2
 290:	0e 94 c8 00 	call	0x190	; 0x190 <led_mask>
 294:	83 e0       	ldi	r24, 0x03	; 3
 296:	0e 94 c8 00 	call	0x190	; 0x190 <led_mask>
 29a:	8f ef       	ldi	r24, 0xFF	; 255
 29c:	9f e3       	ldi	r25, 0x3F	; 63
 29e:	ab e0       	ldi	r26, 0x0B	; 11
 2a0:	81 50       	subi	r24, 0x01	; 1
 2a2:	90 40       	sbci	r25, 0x00	; 0
 2a4:	a0 40       	sbci	r26, 0x00	; 0
 2a6:	e1 f7       	brne	.-8      	; 0x2a0 <main+0x104>
 2a8:	00 c0       	rjmp	.+0      	; 0x2aa <main+0x10e>
 2aa:	00 00       	nop
	_delay_ms(500);
	led_mask(4), led_mask(5);
 2ac:	84 e0       	ldi	r24, 0x04	; 4
 2ae:	0e 94 c8 00 	call	0x190	; 0x190 <led_mask>
 2b2:	85 e0       	ldi	r24, 0x05	; 5
 2b4:	0e 94 c8 00 	call	0x190	; 0x190 <led_mask>
 2b8:	8f ef       	ldi	r24, 0xFF	; 255
 2ba:	9f e3       	ldi	r25, 0x3F	; 63
 2bc:	ab e0       	ldi	r26, 0x0B	; 11
 2be:	81 50       	subi	r24, 0x01	; 1
 2c0:	90 40       	sbci	r25, 0x00	; 0
 2c2:	a0 40       	sbci	r26, 0x00	; 0
 2c4:	e1 f7       	brne	.-8      	; 0x2be <main+0x122>
 2c6:	00 c0       	rjmp	.+0      	; 0x2c8 <main+0x12c>
 2c8:	00 00       	nop
	_delay_ms(500);
	led_mask(6), led_mask(7);
 2ca:	86 e0       	ldi	r24, 0x06	; 6
 2cc:	0e 94 c8 00 	call	0x190	; 0x190 <led_mask>
 2d0:	87 e0       	ldi	r24, 0x07	; 7
 2d2:	0e 94 c8 00 	call	0x190	; 0x190 <led_mask>
 2d6:	8f ef       	ldi	r24, 0xFF	; 255
 2d8:	9f e3       	ldi	r25, 0x3F	; 63
 2da:	ab e0       	ldi	r26, 0x0B	; 11
 2dc:	81 50       	subi	r24, 0x01	; 1
 2de:	90 40       	sbci	r25, 0x00	; 0
 2e0:	a0 40       	sbci	r26, 0x00	; 0
 2e2:	e1 f7       	brne	.-8      	; 0x2dc <main+0x140>
 2e4:	00 c0       	rjmp	.+0      	; 0x2e6 <main+0x14a>
 2e6:	00 00       	nop
 2e8:	ff cf       	rjmp	.-2      	; 0x2e8 <main+0x14c>

000002ea <_exit>:
 2ea:	f8 94       	cli

000002ec <__stop_program>:
 2ec:	ff cf       	rjmp	.-2      	; 0x2ec <__stop_program>
